# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import demo_pb2 as demo__pb2


class DemoStub(object):
  """The demo service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.HelloOnce = channel.unary_unary(
        '/helloworld.Demo/HelloOnce',
        request_serializer=demo__pb2.HelloRequest.SerializeToString,
        response_deserializer=demo__pb2.HelloResponse.FromString,
        )
    self.LotsOfReplies = channel.unary_stream(
        '/helloworld.Demo/LotsOfReplies',
        request_serializer=demo__pb2.HelloRequest.SerializeToString,
        response_deserializer=demo__pb2.HelloResponse.FromString,
        )
    self.LotsOfHello = channel.stream_unary(
        '/helloworld.Demo/LotsOfHello',
        request_serializer=demo__pb2.HelloRequest.SerializeToString,
        response_deserializer=demo__pb2.HelloResponse.FromString,
        )
    self.RepeatBot = channel.stream_stream(
        '/helloworld.Demo/RepeatBot',
        request_serializer=demo__pb2.HelloRequest.SerializeToString,
        response_deserializer=demo__pb2.HelloResponse.FromString,
        )


class DemoServicer(object):
  """The demo service definition.
  """

  def HelloOnce(self, request, context):
    """unary
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LotsOfReplies(self, request, context):
    """Response-streaming RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LotsOfHello(self, request_iterator, context):
    """Request-streaming RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RepeatBot(self, request_iterator, context):
    """Bidirectional streaming RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DemoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'HelloOnce': grpc.unary_unary_rpc_method_handler(
          servicer.HelloOnce,
          request_deserializer=demo__pb2.HelloRequest.FromString,
          response_serializer=demo__pb2.HelloResponse.SerializeToString,
      ),
      'LotsOfReplies': grpc.unary_stream_rpc_method_handler(
          servicer.LotsOfReplies,
          request_deserializer=demo__pb2.HelloRequest.FromString,
          response_serializer=demo__pb2.HelloResponse.SerializeToString,
      ),
      'LotsOfHello': grpc.stream_unary_rpc_method_handler(
          servicer.LotsOfHello,
          request_deserializer=demo__pb2.HelloRequest.FromString,
          response_serializer=demo__pb2.HelloResponse.SerializeToString,
      ),
      'RepeatBot': grpc.stream_stream_rpc_method_handler(
          servicer.RepeatBot,
          request_deserializer=demo__pb2.HelloRequest.FromString,
          response_serializer=demo__pb2.HelloResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helloworld.Demo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
